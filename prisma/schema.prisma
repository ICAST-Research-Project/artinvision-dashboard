generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  MUSEUM_ADMIN
  CURATOR
  ARTIST
}

model User {
  id            String      @id @default(cuid())
  name          String?
  phone         String
  email         String      @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accountType   AccountType

  accounts Account[]

  museumAdmin MuseumAdmin?
  curator     Curator?
  artist      Artist?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MuseumAdmin {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @unique
  museumName String
  about      String
  address    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Curator {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  address   String
  about     String
  connect   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @unique
  address    String
  bio        String
  background String
  education  String
  connect    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
